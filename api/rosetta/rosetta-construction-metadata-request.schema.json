{"$schema":"http://json-schema.org/draft-07/schema","$id":"http://example.com/example.json","type":"object","title":"RosettaConstructionMetadataRequest","description":"A ConstructionMetadataRequest is utilized to get information required to construct a transaction. The Options object used to specify which metadata to return is left purposely unstructured to allow flexibility for implementers. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse.","required":["network_identifier","options"],"properties":{"network_identifier":{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"NetworkIdentifier","description":"The network_identifier specifies which network a particular object is associated with.","required":["blockchain","network"],"properties":{"blockchain":{"type":"string","description":"Blockchain name"},"network":{"type":"string","description":"If a blockchain has a specific chain-id or network identifier, it should go in this field. It is up to the client to determine which network-specific identifier is mainnet or testnet."},"sub_network_identifier":{"type":"object","description":"In blockchains with sharded state, the SubNetworkIdentifier is required to query some object on a specific shard. This identifier is optional for all non-sharded blockchains.","required":["network"],"properties":{"network":{"type":"string","description":"Network name"},"metadata":{"type":"object","description":"Meta data from subnetwork identifier","required":["producer"],"properties":{"producer":{"type":"string","description":"producer"}}}}}}},"options":{"$id":"rosetta-construction-options","title":"RosettaOptions","type":"object","description":"The options that will be sent directly to /construction/metadata by the caller.","required":[],"properties":{"sender_address":{"type":"string","description":"sender's address "},"type":{"type":"string","description":"Type of operation e.g transfer"},"status":{"type":["string","null"],"description":"This value indicates the state of the operations"},"token_transfer_recipient_address":{"type":"string","description":"Recipient's address"},"amount":{"type":"string","description":"Amount to be transfered."},"symbol":{"type":"string","description":"Currency symbol e.g STX"},"decimals":{"type":"integer","description":"Number of decimal places"},"gas_limit":{"type":"number","description":"Maximum price a user is willing to pay."},"gas_price":{"type":"number","description":"Cost necessary to perform a transaction on the network"},"suggested_fee_multiplier":{"type":"number","description":" A suggested fee multiplier to indicate that the suggested fee should be scaled. This may be used to set higher fees for urgent transactions or to pay lower fees when there is less urgency."},"max_fee":{"type":"string","description":"Maximum fee user is willing to pay"},"fee":{"type":"string","description":"Fee for this transaction"},"size":{"type":"integer","description":"Transaction approximative size (used to calculate total fee)."},"memo":{"type":"string","description":"STX token transfer memo."},"number_of_cycles":{"type":"integer","description":"Number of cycles when stacking."},"contract_address":{"type":"string","description":"Address of the contract to call."},"contract_name":{"type":"string","description":"Name of the contract to call."},"burn_block_height":{"type":"integer","description":"Set the burnchain (BTC) block for stacking lock to start."},"delegate_to":{"type":"string","description":"Delegator address for when calling `delegate-stacking`."},"pox_addr":{"type":"string","description":"The reward address for stacking transaction. It should be a valid Bitcoin address"}}},"public_keys":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema","$id":"rosetta-public-key-schema","type":"object","title":"RosettaPublicKey","description":"PublicKey contains a public key byte array for a particular CurveType encoded in hex. Note that there is no PrivateKey struct as this is NEVER the concern of an implementation.","required":["hex_bytes","curve_type"],"properties":{"hex_bytes":{"type":"string","description":"Hex-encoded public key bytes in the format specified by the CurveType."},"curve_type":{"type":"string","description":"CurveType is the type of cryptographic curve associated with a PublicKey.","enum":["secp256k1","edwards25519"]}}}}}}