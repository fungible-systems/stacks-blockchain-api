{"$schema":"http://json-schema.org/draft-07/schema","$id":"http://example.com/example.json","type":"object","title":"RosettaConstructionPayloadResponse","description":"RosettaConstructionPayloadResponse is returned by /construction/payloads. It contains an unsigned transaction blob (that is usually needed to construct the a network transaction from a collection of signatures) and an array of payloads that must be signed by the caller.","required":["unsigned_transaction","payloads"],"properties":{"unsigned_transaction":{"type":"string","description":"This is an unsigned transaction blob (that is usually needed to construct the a network transaction from a collection of signatures)"},"payloads":{"type":"array","description":"An array of payloads that must be signed by the caller","items":{"$schema":"http://json-schema.org/draft-07/schema","$id":"rosetta-signing-payload","type":"object","title":"SigningPayload","description":"SigningPayload is signed by the client with the keypair associated with an address using the specified SignatureType. SignatureType can be optionally populated if there is a restriction on the signature scheme that can be used to sign the payload.","required":["hex_bytes"],"properties":{"address":{"type":"string","description":"[DEPRECATED by account_identifier in v1.4.4] The network-specific address of the account that should sign the payload."},"account_identifier":{"type":"object","title":"RosettaAccount","description":"The account_identifier uniquely identifies an account within a network. All fields in the account_identifier are utilized to determine this uniqueness (including the metadata field, if populated).","required":["address"],"properties":{"address":{"type":"string","description":"The address may be a cryptographic public key (or some encoding of it) or a provided username."},"sub_account":{"type":"object","title":"RosettaSubAccount","description":"An account may have state specific to a contract address (ERC-20 token) and/or a stake (delegated balance). The sub_account_identifier should specify which state (if applicable) an account instantiation refers to.","required":["address"],"properties":{"address":{"type":"string","description":"The address may be a cryptographic public key (or some encoding of it) or a provided username."},"metadata":{"type":"object","description":"If the SubAccount address is not sufficient to uniquely specify a SubAccount, any other identifying information can be stored here. It is important to note that two SubAccounts with identical addresses but differing metadata will not be considered equal by clients.","required":[]}}},"metadata":{"type":"object","description":"Blockchains that utilize a username model (where the address is not a derivative of a cryptographic public key) should specify the public key(s) owned by the address in metadata.","required":[]}}},"hex_bytes":{"type":"string"},"signature_type":{"type":"string","description":"SignatureType is the type of a cryptographic signature.","enum":["ecdsa","ecdsa_recovery","ed25519","schnorr_1","schnorr_poseidon"]}}}}}}