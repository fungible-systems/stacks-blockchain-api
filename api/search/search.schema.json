{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"SearchResult","description":"complete search result for terms","additionalProperties":false,"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"SearchErrorResult","description":"Error search result","required":["found","result","error"],"additionalProperties":false,"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":false},"result":{"type":"object","required":["entity_type"],"additionalProperties":false,"properties":{"entity_type":{"type":"string","description":"Shows the currenty category of entity it is searched in.","enum":["standard_address","unknown_hash","contract_address","invalid_term"]}}},"error":{"type":"string"}}},{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"SearchSuccessResult","description":"Search success result","additionalProperties":false,"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"AddressSearchResult","description":"Address search result","required":["found","result"],"additionalProperties":false,"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":true},"result":{"type":"object","description":"This object carries the search result","required":["entity_id","entity_type"],"additionalProperties":false,"properties":{"entity_id":{"type":"string","description":"The id used to search this query."},"entity_type":{"type":"string","enum":["standard_address"]},"metadata":{"type":"object","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","description":"GET request that returns address balances","title":"AddressStxBalanceResponse","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","description":"StxBalance","type":"object","additionalProperties":false,"required":["balance","total_sent","total_received","total_fees_sent","total_miner_rewards_received","lock_tx_id","locked","lock_height","burnchain_lock_height","burnchain_unlock_height"],"properties":{"balance":{"type":"string"},"total_sent":{"type":"string"},"total_received":{"type":"string"},"total_fees_sent":{"type":"string"},"total_miner_rewards_received":{"type":"string"},"lock_tx_id":{"type":"string","description":"The transaction where the lock event occurred. Empty if no tokens are locked."},"locked":{"type":"string","description":"The amount of locked STX, as string quoted micro-STX. Zero if no tokens are locked."},"lock_height":{"type":"integer","description":"The STX chain block height of when the lock event occurred. Zero if no tokens are locked."},"burnchain_lock_height":{"type":"integer","description":"The burnchain block height of when the lock event occurred. Zero if no tokens are locked."},"burnchain_unlock_height":{"type":"integer","description":"The burnchain block height of when the tokens unlock. Zero if no tokens are locked."}}},{"properties":{"token_offering_locked":{"$schema":"http://json-schema.org/draft-07/schema#","description":"Token Offering Locked","title":"AddressTokenOfferingLocked","type":"object","additionalProperties":false,"required":["total_locked","total_unlocked","unlock_schedule"],"properties":{"total_locked":{"type":"string","description":"Micro-STX amount still locked at current block height."},"total_unlocked":{"type":"string","description":"Micro-STX amount unlocked at current block height."},"unlock_schedule":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","description":"Unlock schedule amount and block height","title":"AddressUnlockSchedule","type":"object","additionalProperties":false,"required":["amount","block_height"],"properties":{"amount":{"type":"string","description":"Micro-STX amount locked at this block height."},"block_height":{"type":"number"}}}}}}}}]}]}}}}},{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"BlockSearchResult","description":"Block search result","required":["found","result"],"additionalProperties":false,"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":true},"result":{"type":"object","description":"This object carries the search result","required":["entity_id","entity_type","block_data"],"additionalProperties":false,"properties":{"entity_id":{"type":"string","description":"The id used to search this query."},"entity_type":{"type":"string","enum":["block_hash"]},"block_data":{"type":"object","description":"Returns basic search result information about the requested id","required":["canonical","hash","parent_block_hash","burn_block_time","height"],"additionalProperties":false,"properties":{"canonical":{"type":"boolean","description":"If the block lies within the canonical chain"},"hash":{"type":"string","description":"Refers to the hash of the block"},"parent_block_hash":{"type":"string"},"burn_block_time":{"type":"integer"},"height":{"type":"integer"}}},"metadata":{"type":"object","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"Block","description":"A block","type":"object","required":["canonical","height","hash","parent_block_hash","txs","burn_block_time","burn_block_time_iso","burn_block_hash","burn_block_height","miner_txid","parent_microblock_hash","parent_microblock_sequence","microblocks_accepted","microblocks_streamed","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"properties":{"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"height":{"type":"integer","description":"Height of the block"},"hash":{"type":"string","description":"Hash representing the block"},"parent_block_hash":{"type":"string","description":"Hash of the parent block"},"burn_block_time":{"type":"number","description":"Unix timestamp (in seconds) indicating when this block was mined."},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined."},"burn_block_hash":{"type":"string","description":"Hash of the anchor chain block"},"burn_block_height":{"type":"integer","description":"Height of the anchor chain block"},"miner_txid":{"type":"string","description":"Anchor chain transaction ID"},"parent_microblock_hash":{"type":"string","description":"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1."},"parent_microblock_sequence":{"type":"integer","description":"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1."},"txs":{"type":"array","description":"List of transactions included in the block","items":{"type":"string","description":"Transaction ID"}},"microblocks_accepted":{"type":"array","description":"List of microblocks that were accepted in this anchor block. Not every anchored block will have a accepted all (or any) of the previously streamed microblocks. Microblocks that were orphaned are not included in this list.","items":{"type":"string","description":"Microblock hash"}},"microblocks_streamed":{"type":"array","description":"List of microblocks that were streamed/produced by this anchor block's miner. This list only includes microblocks that were accepted in the following anchor block. Microblocks that were orphaned are not included in this list.","items":{"type":"string","description":"Microblock hash"}},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."}}}],"additionalItems":false}}}}},{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"ContractSearchResult","description":"Contract search result","required":["found","result"],"additionalProperties":false,"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":true},"result":{"type":"object","description":"This object carries the search result","required":["entity_id","entity_type"],"additionalProperties":false,"properties":{"entity_id":{"type":"string","description":"The id used to search this query."},"entity_type":{"type":"string","enum":["contract_address"]},"tx_data":{"type":"object","description":"Returns basic search result information about the requested id","additionalProperties":false,"properties":{"canonical":{"type":"boolean","description":"If the transaction lies within the canonical chain"},"block_hash":{"type":"string","description":"Refers to the hash of the block for searched transaction"},"burn_block_time":{"type":"integer"},"block_height":{"type":"integer"},"tx_type":{"type":"string"},"tx_id":{"type":"string","description":"Corresponding tx_id for smart_contract"}}},"metadata":{"type":"object","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolTransaction","description":"Describes all transaction types on Stacks 2.0 blockchain","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTokenTransferTransaction","description":"Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransactionMetadata","description":"Metadata associated with token-transfer type transactions","type":"object","required":["tx_type","token_transfer"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["token_transfer"]},"token_transfer":{"type":"object","required":["recipient_address","amount","memo"],"additionalProperties":false,"properties":{"recipient_address":{"type":"string"},"amount":{"type":"string","description":"Transfer amount as Integer string (64-bit unsigned integer)"},"memo":{"type":"string","description":"Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolSmartContractTransaction","description":"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransactionMetadata","description":"Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","required":["tx_type","smart_contract"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["smart_contract"]},"smart_contract":{"type":"object","additionalProperties":false,"required":["contract_id","source_code"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"source_code":{"type":"string","description":"Clarity code of the smart contract being deployed"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolContractCallTransaction","description":"Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransactionMetadata","description":"Metadata associated with a contract-call type transaction","required":["tx_type","contract_call"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["contract_call"]},"contract_call":{"type":"object","additionalProperties":false,"required":["contract_id","function_name","function_signature"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"function_name":{"type":"string","description":"Name of the Clarity function to be invoked"},"function_signature":{"type":"string","description":"Function definition, including function name and type as well as parameter names and types"},"function_args":{"type":"array","description":"List of arguments used to invoke the function","items":{"type":"object","additionalProperties":false,"required":["hex","repr","name","type"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"}}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolPoisonMicroblockTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransactionMetadata","description":"Metadata associated with a poison-microblock type transaction","required":["tx_type","poison_microblock"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["poison_microblock"]},"poison_microblock":{"type":"object","required":["microblock_header_1","microblock_header_2"],"additionalProperties":false,"properties":{"microblock_header_1":{"type":"string","description":"Hex encoded microblock header"},"microblock_header_2":{"type":"string","description":"Hex encoded microblock header"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolCoinbaseTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransactionMetadata","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","required":["tx_type","coinbase_payload"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["coinbase"]},"coinbase_payload":{"type":"object","additionalProperties":false,"required":["data"],"properties":{"data":{"type":"string","description":"Hex encoded 32-byte scratch space for block leader's use"}}}}}]}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"Transaction","description":"Describes all transaction types on Stacks 2.0 blockchain","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransaction","description":"Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransactionMetadata","description":"Metadata associated with token-transfer type transactions","type":"object","required":["tx_type","token_transfer"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["token_transfer"]},"token_transfer":{"type":"object","required":["recipient_address","amount","memo"],"additionalProperties":false,"properties":{"recipient_address":{"type":"string"},"amount":{"type":"string","description":"Transfer amount as Integer string (64-bit unsigned integer)"},"memo":{"type":"string","description":"Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransaction","description":"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransactionMetadata","description":"Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","required":["tx_type","smart_contract"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["smart_contract"]},"smart_contract":{"type":"object","additionalProperties":false,"required":["contract_id","source_code"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"source_code":{"type":"string","description":"Clarity code of the smart contract being deployed"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransaction","description":"Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransactionMetadata","description":"Metadata associated with a contract-call type transaction","required":["tx_type","contract_call"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["contract_call"]},"contract_call":{"type":"object","additionalProperties":false,"required":["contract_id","function_name","function_signature"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"function_name":{"type":"string","description":"Name of the Clarity function to be invoked"},"function_signature":{"type":"string","description":"Function definition, including function name and type as well as parameter names and types"},"function_args":{"type":"array","description":"List of arguments used to invoke the function","items":{"type":"object","additionalProperties":false,"required":["hex","repr","name","type"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"}}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransactionMetadata","description":"Metadata associated with a poison-microblock type transaction","required":["tx_type","poison_microblock"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["poison_microblock"]},"poison_microblock":{"type":"object","required":["microblock_header_1","microblock_header_2"],"additionalProperties":false,"properties":{"microblock_header_1":{"type":"string","description":"Hex encoded microblock header"},"microblock_header_2":{"type":"string","description":"Hex encoded microblock header"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransactionMetadata","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","required":["tx_type","coinbase_payload"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["coinbase"]},"coinbase_payload":{"type":"object","additionalProperties":false,"required":["data"],"properties":{"data":{"type":"string","description":"Hex encoded 32-byte scratch space for block leader's use"}}}}}]}]}],"additionalItems":false}}}}},{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"MempoolTxSearchResult","description":"Contract search result","required":["found","result"],"additionalProperties":false,"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":true},"result":{"type":"object","additionalProperties":false,"description":"This object carries the search result","required":["entity_id","entity_type","tx_data"],"properties":{"entity_id":{"type":"string","description":"The id used to search this query."},"entity_type":{"type":"string","enum":["mempool_tx_id"]},"tx_data":{"type":"object","additionalProperties":false,"description":"Returns basic search result information about the requested id","required":["tx_type"],"properties":{"tx_type":{"type":"string"}}},"metadata":{"type":"object","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolTransaction","description":"Describes all transaction types on Stacks 2.0 blockchain","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTokenTransferTransaction","description":"Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransactionMetadata","description":"Metadata associated with token-transfer type transactions","type":"object","required":["tx_type","token_transfer"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["token_transfer"]},"token_transfer":{"type":"object","required":["recipient_address","amount","memo"],"additionalProperties":false,"properties":{"recipient_address":{"type":"string"},"amount":{"type":"string","description":"Transfer amount as Integer string (64-bit unsigned integer)"},"memo":{"type":"string","description":"Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolSmartContractTransaction","description":"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransactionMetadata","description":"Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","required":["tx_type","smart_contract"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["smart_contract"]},"smart_contract":{"type":"object","additionalProperties":false,"required":["contract_id","source_code"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"source_code":{"type":"string","description":"Clarity code of the smart contract being deployed"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolContractCallTransaction","description":"Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransactionMetadata","description":"Metadata associated with a contract-call type transaction","required":["tx_type","contract_call"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["contract_call"]},"contract_call":{"type":"object","additionalProperties":false,"required":["contract_id","function_name","function_signature"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"function_name":{"type":"string","description":"Name of the Clarity function to be invoked"},"function_signature":{"type":"string","description":"Function definition, including function name and type as well as parameter names and types"},"function_args":{"type":"array","description":"List of arguments used to invoke the function","items":{"type":"object","additionalProperties":false,"required":["hex","repr","name","type"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"}}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolPoisonMicroblockTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransactionMetadata","description":"Metadata associated with a poison-microblock type transaction","required":["tx_type","poison_microblock"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["poison_microblock"]},"poison_microblock":{"type":"object","required":["microblock_header_1","microblock_header_2"],"additionalProperties":false,"properties":{"microblock_header_1":{"type":"string","description":"Hex encoded microblock header"},"microblock_header_2":{"type":"string","description":"Hex encoded microblock header"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"MempoolCoinbaseTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"type":"string","description":"Status of the transaction in the mempool. Can be pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"MempoolTransactionStatus","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransactionMetadata","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","required":["tx_type","coinbase_payload"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["coinbase"]},"coinbase_payload":{"type":"object","additionalProperties":false,"required":["data"],"properties":{"data":{"type":"string","description":"Hex encoded 32-byte scratch space for block leader's use"}}}}}]}]}],"additionalItems":false}}}}},{"$schema":"http://json-schema.org/draft-07/schema","type":"object","title":"TxSearchResult","description":"Transaction search result","additionalProperties":false,"required":["found","result"],"properties":{"found":{"type":"boolean","description":"Indicates if the requested object was found or not","default":true},"result":{"type":"object","description":"This object carries the search result","required":["entity_id","entity_type","tx_data"],"additionalProperties":false,"properties":{"entity_id":{"type":"string","description":"The id used to search this query."},"entity_type":{"type":"string","enum":["tx_id"]},"tx_data":{"type":"object","description":"Returns basic search result information about the requested id","required":["canonical","block_hash","burn_block_time","block_height","tx_type"],"additionalProperties":false,"properties":{"canonical":{"type":"boolean","description":"If the transaction lies within the canonical chain"},"block_hash":{"type":"string","description":"Refers to the hash of the block for searched transaction"},"burn_block_time":{"type":"integer"},"block_height":{"type":"integer"},"tx_type":{"type":"string"}}},"metadata":{"type":"object","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"Transaction","description":"Describes all transaction types on Stacks 2.0 blockchain","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransaction","description":"Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"TokenTransferTransactionMetadata","description":"Metadata associated with token-transfer type transactions","type":"object","required":["tx_type","token_transfer"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["token_transfer"]},"token_transfer":{"type":"object","required":["recipient_address","amount","memo"],"additionalProperties":false,"properties":{"recipient_address":{"type":"string"},"amount":{"type":"string","description":"Transfer amount as Integer string (64-bit unsigned integer)"},"memo":{"type":"string","description":"Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransaction","description":"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"SmartContractTransactionMetadata","description":"Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","required":["tx_type","smart_contract"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["smart_contract"]},"smart_contract":{"type":"object","additionalProperties":false,"required":["contract_id","source_code"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"source_code":{"type":"string","description":"Clarity code of the smart contract being deployed"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransaction","description":"Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"ContractCallTransactionMetadata","description":"Metadata associated with a contract-call type transaction","required":["tx_type","contract_call"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["contract_call"]},"contract_call":{"type":"object","additionalProperties":false,"required":["contract_id","function_name","function_signature"],"properties":{"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"function_name":{"type":"string","description":"Name of the Clarity function to be invoked"},"function_signature":{"type":"string","description":"Function definition, including function name and type as well as parameter names and types"},"function_args":{"type":"array","description":"List of arguments used to invoke the function","items":{"type":"object","additionalProperties":false,"required":["hex","repr","name","type"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"}}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"PoisonMicroblockTransactionMetadata","description":"Metadata associated with a poison-microblock type transaction","required":["tx_type","poison_microblock"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["poison_microblock"]},"poison_microblock":{"type":"object","required":["microblock_header_1","microblock_header_2"],"additionalProperties":false,"properties":{"microblock_header_1":{"type":"string","description":"Hex encoded microblock header"},"microblock_header_2":{"type":"string","description":"Hex encoded microblock header"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransaction","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"AbstractTransaction","description":"Anchored transaction metadata. All mined/anchored Stacks transactions have these properties.","type":"object","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"properties":{"principal":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"properties":{"condition_code":{"$schema":"http://json-schema.org/draft-07/schema#","title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],"additionalProperties":false,"properties":{"block_hash":{"type":"string","description":"Hash of the blocked this transactions was associated with"},"block_height":{"type":"integer","description":"Height of the block this transactions was associated with"},"burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this block was mined"},"burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},"parent_burn_block_time":{"type":"integer","description":"Unix timestamp (in seconds) indicating when this parent block was mined"},"parent_burn_block_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},"canonical":{"type":"boolean","description":"Set to `true` if block corresponds to the canonical chain tip"},"tx_index":{"type":"integer","description":"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},"tx_status":{"description":"Status of the transaction. Can be included in a block with a success or aborted status. Or pending in the mempool. Or dropped from the mempool from being replaced by a transaction with the same nonce but a higher fee, replaced by a transaction with the same nonce but in the canonical fork, the transaction is too expensive to include in a block, or because it became stale.","$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionStatus","type":"string","enum":["success","abort_by_response","abort_by_post_condition"]},"tx_result":{"type":"object","required":["hex","repr"],"description":"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.","additionalProperties":false,"properties":{"hex":{"type":"string","description":"Hex string representing the value fo the transaction result"},"repr":{"type":"string","description":"Readable string of the transaction result"}}},"event_count":{"type":"integer","description":"Number of transaction events"},"parent_block_hash":{"type":"string","description":"Hash of the previous block."},"is_unanchored":{"type":"boolean","description":"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},"microblock_hash":{"type":"string","description":"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},"microblock_sequence":{"type":"integer","description":"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},"microblock_canonical":{"type":"boolean","description":"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},"execution_cost_read_count":{"type":"integer","description":"Execution cost read count."},"execution_cost_read_length":{"type":"integer","description":"Execution cost read length."},"execution_cost_runtime":{"type":"integer","description":"Execution cost runtime."},"execution_cost_write_count":{"type":"integer","description":"Execution cost write count."},"execution_cost_write_length":{"type":"integer","description":"Execution cost write length."},"events":{"type":"array","description":"List of transaction events","items":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEvent","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventSmartContractLog","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","contract_log"],"properties":{"event_type":{"type":"string","enum":["smart_contract_log"]},"tx_id":{"type":"string"},"contract_log":{"type":"object","additionalProperties":false,"required":["contract_id","topic","value"],"properties":{"contract_id":{"type":"string"},"topic":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxLock","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","stx_lock_event"],"properties":{"event_type":{"type":"string","enum":["stx_lock"]},"tx_id":{"type":"string"},"stx_lock_event":{"type":"object","additionalProperties":false,"required":["locked_amount","unlock_height","locked_address"],"properties":{"locked_amount":{"type":"string"},"unlock_height":{"type":"integer"},"locked_address":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventStxAsset","description":"Only present in `smart_contract` and `contract_call` tx types.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["stx_asset"]},"tx_id":{"type":"string"},"asset":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventAsset","additionalProperties":false,"properties":{"asset_event_type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"TransactionEventAssetType","type":"string","enum":["transfer","mint","burn"]},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"},"value":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","amount"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"amount":{"type":"string"}}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"TransactionEventNonFungibleAsset","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","required":["event_index"],"properties":{"event_index":{"type":"integer"}}},{"type":"object","required":["event_type","tx_id","asset"],"properties":{"event_type":{"type":"string","enum":["non_fungible_token_asset"]},"tx_id":{"type":"string"},"asset":{"type":"object","additionalProperties":false,"required":["asset_event_type","asset_id","sender","recipient","value"],"properties":{"asset_event_type":{"type":"string"},"asset_id":{"type":"string"},"sender":{"type":"string"},"recipient":{"type":"string"},"value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}}}}}}]}]}}}}]},{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"CoinbaseTransactionMetadata","description":"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock","required":["tx_type","coinbase_payload"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["coinbase"]},"coinbase_payload":{"type":"object","additionalProperties":false,"required":["data"],"properties":{"data":{"type":"string","description":"Hex encoded 32-byte scratch space for block leader's use"}}}}}]}]}],"additionalItems":false}}}}}]}]}